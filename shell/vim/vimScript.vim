# vim script 基本语法 以及 调试方式 查找帮助方式 
:help  eval 查看脚本相关的帮助
:source %  执行当前文件
########################################################### 变量
# 使用set为内部选项赋值
set background=dark
#对于非内部变量,使用let
let animal_name='Miss catt'

# vim中变量和函数的作用于是通过前缀实现的
g 为全局作用域,若未指定作用域,则默认为全局作用域
v 为vim所定义的全局作用域
l 为局部作用域(在函数内部,若未指定作用域,则默认为这个作用域)
b 表示当前缓冲区
w 表示当前窗口
t 表示当前标签页
s 表示使用:source 执行的vim脚本文件中的局部文件作用域
a 表示函数的参数

let g:animal_name='MIss cat'    # 全局变量
let w:is_cat=1                  # 窗口变量

# 在寄存器a中保存值
let @a=;cats are wired'
# vim 选项(使用set修改的那些变量)另一种访问方式为在变量前面添加&
let &ignorecase=0

# 变量操作
整数变量之间可以进行常用的加减乘除运算(+ - * /), 字符串拼接使用 点 运算符
在一个单引号定义的字符串内部使用单引号,则输入两个单引号即可('')

########################################################### 输出
:echo g:animal_name   # 此输出并没有被记录到任何地址,一旦输出结果被覆盖,就没有办法再查看以前的输出
:echomsg g:animal_name    #输出被存包到了当前会话的消息日志中,执行:messages 命令即可查看



########################################################### 条件表达式
if g:animal_kind == 'cat'
	echo g:animal_name . 'is a cat'
elseif g:animal_kind == 'dog'
	echo g:animal_name . ' is a dog'
else
	echo g:animal_name . ' is something else'
endif

# 三元表达式
echo g:animal_name . (g:is_cat ? ' is a cat' : 'is something else')

# 逻辑运算
与 &&
或 ||
非 !

if !(g:is_cat || g:is_dog)
	echo g:animal_name . ' is somethine else'
endif

## 比较运算符
==   比较两个字符串,是否忽略大小写取决于用户设置
==?  比较两个字符串,忽略大小写
==#	 比较两个字符串考虑大小写
=~	 表示使左边与有操作数匹配
=~? 和 =~#   分别表示忽略大小写和考虑大小写
!~ 与 =~  相反
=~# 和 !~# 分别对应于 忽略大小写 和 考虑大小写


########################################################### 列表


###########################################################  字典


########################################################### 循环


########################################################### 函数


########################################################### 类


########################################################### lambde表达式




########################################################### 映射和过滤




########################################################### 与vim交互



########################################################### 文件相关的命令



########################################################### 输入提示



